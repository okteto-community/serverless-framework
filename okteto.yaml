build:
  serverless:
    context: tools

deploy:
  image: $OKTETO_BUILD_SERVERLESS_IMAGE
  commands:
    - name: Deploy your serverless function
      command: |
        set -e
        cd function
        serverless deploy
        
        # get the Deployed Name, ARN and URL of the function 
        HELLO_DEPLOYED_NAME=$(serverless info --json | jq -r '.info.functions[] | select(.name == "hello") | .deployedName')
        HELLO_ARN=$(serverless info --json | jq -r '.outputs[] | select(.OutputKey == "HelloLambdaFunctionQualifiedArn") | .OutputValue')
        HELLO_UI="https://${AWS_REGION}.console.aws.amazon.com/lambda/home?region=${AWS_REGION}#/functions/${HELLO_DEPLOYED_NAME}?tab=code"
        
        # Pass the values to the OKTETO_ENV so they are included in the UI and Resource Notes
        {
          echo "OKTETO_EXTERNAL_SERVERLESS_ENDPOINTS_ARN_URL=$HELLO_ARN"
          echo "OKTETO_EXTERNAL_SERVERLESS_ENDPOINTS_WEB_URL=$HELLO_UI"          
        }  >> "$OKTETO_ENV"
test:
  serverless:
    image: $OKTETO_BUILD_SERVERLESS_IMAGE
    context: function
    commands:
    - name: test that the function returns the expected message
      command: |
        serverless invoke --function hello | jq '{"status_code_valid": (.statusCode == 200), "message_valid": ((.body | fromjson).message == "Go Serverless! Go Okteto!")}'

destroy:
  image: $OKTETO_BUILD_SERVERLESS_IMAGE
  commands:
    - name: Delete your serverless function
      command: |
        set -e
        cd function
        serverless remove

external:
  serverless:
    icon: function
    notes: function/notes.md
    endpoints:
      - name: arn
      - name: web
